##
# Copyright (C) 2022-2023 Hedera Hashgraph, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##

name: "Z-Platform XC: Compile"
on:
  push:
    branches: [ hedera-services ]
































































































jobs:
  compile:
    name: ${{ inputs.custom-job-label || 'Compiles' }}
    runs-on: [self-hosted, Linux, large, ephemeral]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.access-token }}
          fetch-depth: 0

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        if: ${{ inputs.enable-unit-tests && !cancelled() }}
        with:
          workload_identity_provider: 'projects/1052213468738/locations/global/workloadIdentityPools/junit-reporting-pool/providers/junit-report-writer'
          service_account: 'platform-junit-bucket-writer@swirlds-automation.iam.gserviceaccount.com'

      - name: Setup Google Cloud SDK
        if: ${{ inputs.enable-unit-tests && !cancelled() }}
        uses: google-github-actions/setup-gcloud@v1

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          build-root-directory: platform-sdk
          gradle-version: ${{ inputs.gradle-version }}
          gradle-home-cache-strict-match: false
          gradle-home-cache-includes: |
            caches
            notifications
            jdks
            dependency-check-data

      - name: Gradle Assemble
        id: gradle-build
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: -p platform-sdk assemble --scan

      - name: Gradle JavaDoc
        id: gradle-javadoc
        uses: gradle/gradle-build-action@v2
        if: ${{ inputs.enable-javadoc && steps.gradle-build.conclusion == 'success' && !cancelled() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: -p platform-sdk javadoc --scan --parallel

      - name: Gradle Spotless Check
        uses: gradle/gradle-build-action@v2
        if: ${{ inputs.enable-spotless-check && steps.gradle-build.conclusion == 'success' && !cancelled() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: -p platform-sdk spotlessCheck --scan --parallel

      - name: OWASP Dependency Report
        id: gradle-dependency-report
        uses: gradle/gradle-build-action@v2
        if: ${{ inputs.enable-owasp-analysis && steps.gradle-build.conclusion == 'success' && !cancelled() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: -p platform-sdk dependencyCheckAggregate --scan -PsuppressionFile=${{ github.workspace }}/platform-sdk/gradle/dep-check-suppression.xml

      - name: Store OWASP Report Artifact
        uses: actions/upload-artifact@v3
        if: ${{ inputs.enable-owasp-analysis && steps.gradle-dependency-check.conclusion == 'success' && !cancelled() }}
        with:
          name: OWASP Dependency Report
          path: ${{ github.workspace }}/platform-sdk/build/reports/dependency-check

      - name: OWASP Dependency Check (Fails on CVE Score >= ${{ inputs.owasp-cvss-score-threshold }})
        id: gradle-dependency-check
        uses: gradle/gradle-build-action@v2
        if: ${{ inputs.enable-owasp-analysis && steps.gradle-build.conclusion == 'success' && !cancelled() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: -p platform-sdk dependencyCheckAggregate --scan -PfailBuildOnCVSS=${{ inputs.owasp-cvss-score-threshold }} -PsuppressionFile=${{ github.workspace }}/platform-sdk/gradle/dep-check-suppression.xml

      - name: Gradle Check
        uses: gradle/gradle-build-action@v2
        if: ${{ inputs.enable-unit-tests && steps.gradle-build.conclusion == 'success' && !cancelled() && always() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: -p platform-sdk check hammerTest --scan

      - name: Publish JUnit Test Report
        uses: actionite/publish-unit-test-result-action@v2
        if: ${{ inputs.enable-unit-tests && steps.gradle-build.conclusion == 'success' && !cancelled() && always() }}
        with:
          check_name: 'Platform: JUnit Test Report'
          check_run_disabled: true
          json_thousands_separator: ','
          junit_files: '**/build/test-results/**/*.xml'

      - name: Collect JUnit Reports
        id: junit-reports
        if: ${{ inputs.enable-unit-tests && steps.gradle-build.conclusion == 'success' && !cancelled() && always() }}
        run: |
          [[ -d "${HOME}/junit-reports" ]] || mkdir -p "${HOME}/junit-reports"
          find . -type f -regex ".*/build/test-results/.*xml" -exec cp -v {} "${HOME}/junit-reports" \;
          echo "path=${HOME}/junit-reports" >> "${GITHUB_OUTPUT}"

      - name: Compute JUnit Bucket Prefix
        id: junit-bucket
        if: ${{ inputs.enable-unit-tests && steps.gradle-build.conclusion == 'success' && !cancelled() && always() }}
        run: |
          PREFIX="${{ github.repository }}/${{ github.actor }}/${{ github.ref_name }}/$(echo "${{ github.workflow }}" | sha256sum | cut -d ' ' -f 1)/${{ github.run_number }}/${{ github.run_attempt }}"
          echo "prefix=${PREFIX}" >> "${GITHUB_OUTPUT}"

      - name: Upload JUnit Reports
        uses: google-github-actions/upload-cloud-storage@v1
        if: ${{ inputs.enable-unit-tests && steps.gradle-build.conclusion == 'success' && !cancelled() && always() }}
        with:
          parent: false
          gzip: false
          path: ${{ steps.junit-reports.outputs.path }}
          destination: ${{ inputs.junit-report-bucket }}/${{ steps.junit-bucket.outputs.prefix }}

      - name: Display JUnit Report Link
        if: ${{ inputs.enable-unit-tests && steps.gradle-build.conclusion == 'success' && !cancelled() && always() }}
        run: |
          URL="${{ inputs.junit-report-host }}"

          [[ "${URL}" =~ ^https?:// ]] || URL="http://${URL}"
          URL="${URL}/${{ steps.junit-bucket.outputs.prefix }}"

          echo "::notice title=JUnit Report Link::${URL}"
          printf "## JUnit Report Access Link\n\n [%s](%s)\n\n" "${URL}" "${URL}" >> ${GITHUB_STEP_SUMMARY}

      - name: SonarCloud Options
        id: sonar-cloud
        env:
          IS_PULL_REQUEST: ${{ github.event_name == 'pull_request' || github.event_name == 'pull_request_target' }}
        if: ${{ inputs.enable-sonar-analysis && steps.gradle-build.conclusion == 'success' && !cancelled() && always() }}
        run: |
          SONAR_OPTS="-Dsonar.branch.name=${{ github.ref_name }}"
          if [[ "${IS_PULL_REQUEST}" == true ]]; then
            SONAR_OPTS=""
          fi

          echo "options=${SONAR_OPTS}" >> "${GITHUB_OUTPUT}"

      - name: Gradle SonarCloud Scan
        uses: gradle/gradle-build-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.access-token }}
          SONAR_TOKEN: ${{ secrets.sonar-token }}
        if: ${{ inputs.enable-sonar-analysis && steps.gradle-build.conclusion == 'success' && !cancelled() && always() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: -p platform-sdk sonarqube --info --scan ${{ steps.sonar-cloud.outputs.options }}

      - name: Gradle JMH Jars
        uses: gradle/gradle-build-action@v2
        if: ${{ inputs.enable-jmh-tests && steps.gradle-build.conclusion == 'success' && !cancelled() && always() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: -p platform-sdk jmhJar --scan

      - name: Gradle JMH Benchmarks
        uses: gradle/gradle-build-action@v2
        if: ${{ inputs.enable-jmh-tests && steps.gradle-build.conclusion == 'success' && !cancelled() && always() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: -p platform-sdk jmh --scan
