##
# Copyright (C) 2022-2023 Hedera Hashgraph, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##

name: "Z-Node XC: Compile"
on:
  push:
    branches: [ hedera-services ]































































































jobs:
  compile:
    name: ${{ inputs.custom-job-label || 'Compiles' }}
    runs-on: [self-hosted, Linux, large, ephemeral]
    steps:
      - name: Checkout Code
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # pin@v3

      - name: Expand Shallow Clone for SonarQube and Spotless
        if: ${{ (inputs.enable-sonar-analysis || inputs.enable-unit-tests || inputs.enable-spotless-check) && !cancelled() }}
        run: |
          git fetch --unshallow --no-recurse-submodules

      - name: Setup Java
        uses: actions/setup-java@1df8dbefe2a8cbc99770194893dd902763bee34b # pin@v3
        with:
          distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@3fbe033aaae657f011f88f29be9e65ed26bd29ef # pin@v2
        with:
          build-root-directory: hedera-node
          gradle-version: ${{ inputs.gradle-version }}

      - name: Setup NodeJS
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # pin@v3
        with:
          node-version: ${{ inputs.node-version }}

      - name: Compile
        id: gradle-build
        uses: gradle/gradle-build-action@3fbe033aaae657f011f88f29be9e65ed26bd29ef # pin@v2
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: -p hedera-node assemble --scan

      - name: Javadoc
        uses: gradle/gradle-build-action@3fbe033aaae657f011f88f29be9e65ed26bd29ef # pin@v2
        if: ${{ inputs.enable-javadoc && !cancelled() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: -p hedera-node javadoc --scan

      - name: Spotless Check
        uses: gradle/gradle-build-action@3fbe033aaae657f011f88f29be9e65ed26bd29ef # pin@v2
        if: ${{ inputs.enable-spotless-check && !cancelled() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: -p hedera-node spotlessCheck --scan

      - name: Gradle Dependency Scopes Check
        uses: gradle/gradle-build-action@v2
        if: ${{ inputs.enable-dependency-check && steps.gradle-build.conclusion == 'success' && !cancelled() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: -p hedera-node checkAllModuleInfo --scan --continue

      - name: Unit Testing
        id: gradle-test
        uses: gradle/gradle-build-action@3fbe033aaae657f011f88f29be9e65ed26bd29ef # pin@v2
        if: ${{ inputs.enable-unit-tests && steps.gradle-build.conclusion == 'success' && !cancelled() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: -p hedera-node check --continue --scan

      - name: Publish Unit Test Report
        uses: actionite/publish-unit-test-result-action@1e01e49081c6c4073913aa4b7980fa83e709f322 # pin@v2
        if: ${{ inputs.enable-unit-tests && steps.gradle-build.conclusion == 'success' && !cancelled() }}
        with:
          check_name: 'Node: Unit Test Results'
          check_run_disabled: true
          json_thousands_separator: ','
          junit_files: "**/build/test-results/test/TEST-*.xml"

      - name: Setup Docker BuildX
        if: ${{ (inputs.enable-integration-tests || inputs.enable-e2e-tests) && steps.gradle-build.conclusion == 'success' && !cancelled() }}
        uses: docker/setup-buildx-action@v2
        with:
          version: v0.11.0

      - name: Build Docker Image # build the image for hedera-node
        if: ${{ (inputs.enable-integration-tests || inputs.enable-e2e-tests) && steps.gradle-build.conclusion == 'success' && !cancelled() }}
        uses: gradle/gradle-build-action@3fbe033aaae657f011f88f29be9e65ed26bd29ef # pin@v2
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: -p hedera-node createDockerImage

      - name: Integration Testing
        id: gradle-itest
        uses: gradle/gradle-build-action@3fbe033aaae657f011f88f29be9e65ed26bd29ef # pin@v2
        if: ${{ inputs.enable-integration-tests && steps.gradle-build.conclusion == 'success' && !cancelled() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: -p hedera-node itest --scan

      - name: Publish Integration Test Report
        uses: actionite/publish-unit-test-result-action@1e01e49081c6c4073913aa4b7980fa83e709f322 # pin@v2
        if: ${{ inputs.enable-integration-tests && steps.gradle-build.conclusion == 'success' && !cancelled() }}
        with:
          check_name: 'Node: Integration Test Results'
          check_run_disabled: true
          json_thousands_separator: ','
          junit_files: "**/build/test-results/itest/TEST-*.xml"

      - name: Publish Integration Test Network Logs
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # pin@v3
        if: ${{ inputs.enable-integration-tests && inputs.enable-network-log-capture && !cancelled() }}
        with:
          name: Integration Test Network Logs
          path: |
            hedera-node/test-clients/build/network/itest/output/**

      - name: E2E Testing
        id: gradle-eet
        uses: gradle/gradle-build-action@3fbe033aaae657f011f88f29be9e65ed26bd29ef # pin@v2
        if: ${{ inputs.enable-e2e-tests && steps.gradle-build.conclusion == 'success' && !cancelled() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: -p hedera-node eet --scan

      - name: Publish E2E Test Report
        uses: actionite/publish-unit-test-result-action@1e01e49081c6c4073913aa4b7980fa83e709f322 # pin@v2
        if: ${{ inputs.enable-e2e-tests && steps.gradle-build.conclusion == 'success' && !cancelled() }}
        with:
          check_name: 'Node: E2E Test Results'
          check_run_disabled: true
          json_thousands_separator: ','
          junit_files: "**/build/test-results/eet/TEST-*.xml"

      - name: Publish E2E Test Network Logs
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # pin@v3
        if: ${{ inputs.enable-e2e-tests && inputs.enable-network-log-capture && !cancelled() }}
        with:
          name: E2E Test Network Logs
          path: |
            hedera-node/test-clients/build/network/eet/output/**

      - name: Jacoco Coverage Report
        uses: gradle/gradle-build-action@3fbe033aaae657f011f88f29be9e65ed26bd29ef # pin@v2
        if: ${{ inputs.enable-unit-tests && !cancelled() }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: -p hedera-node jacocoTestReport --scan

      - name: Publish To Codecov
        if: ${{ inputs.enable-unit-tests && !cancelled() }}
        uses: codecov/codecov-action@d9f34f8cd5cb3b3eb79b3e4b5dae3a16df499a70 # pin@v3

      - name: Publish Test Reports
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # pin@v3
        if: ${{ inputs.enable-unit-tests && !cancelled() }}
        with:
          name: Test Reports
          path: "**/build/reports/tests/**"

      - name: SonarCloud Options
        id: sonar-cloud
        env:
          IS_PULL_REQUEST: ${{ github.event_name == 'pull_request' || github.event_name == 'pull_request_target' }}
        if: >-
          ${{
            inputs.enable-sonar-analysis &&
            steps.gradle-build.conclusion == 'success' &&
            (
              github.event.pull_request.head.repo.full_name == github.repository ||
              github.event_name == 'push' ||
              github.event_name == 'workflow_dispatch'
            ) &&
            !cancelled()
          }}
        run: |
          SONAR_OPTS="-Dsonar.branch.name=${{ github.ref_name }}"
          if [[ "${IS_PULL_REQUEST}" == true ]]; then
            SONAR_OPTS=""
          fi

          echo "options=${SONAR_OPTS}" >> "${GITHUB_OUTPUT}"

      - name: SonarCloud Scan
        uses: gradle/gradle-build-action@3fbe033aaae657f011f88f29be9e65ed26bd29ef # pin@v2
        env:
          GITHUB_TOKEN: ${{ secrets.access-token }}
          SONAR_TOKEN: ${{ secrets.sonar-token }}
          SONAR_OPTS: ${{ steps.sonar-cloud.outputs.options }}
        if: >-
          ${{
            inputs.enable-sonar-analysis &&
            steps.gradle-build.conclusion == 'success' &&
            (
              github.event.pull_request.head.repo.full_name == github.repository ||
              github.event_name == 'push' ||
              github.event_name == 'workflow_dispatch'
            ) &&
            !cancelled()
          }}
        with:
          gradle-version: ${{ inputs.gradle-version }}
          arguments: -p hedera-node sonarqube --info --scan ${{ steps.sonar-cloud.outputs.options }}

      - name: Setup Snyk
        env:
          SNYK_TOKEN: ${{ secrets.snyk-token }}
        if: >-
          ${{
            inputs.enable-snyk-scan &&
            steps.gradle-build.conclusion == 'success' &&
            (
              github.event.pull_request.head.repo.full_name == github.repository ||
              github.event_name == 'push' ||
              github.event_name == 'workflow_dispatch'
            ) &&
            !cancelled()
          }}
        run: npm install -g snyk snyk-to-html @wcj/html-to-markdown-cli

      - name: Snyk Scan
        id: snyk
        env:
          SNYK_TOKEN: ${{ secrets.snyk-token }}
        if: >-
          ${{
            inputs.enable-snyk-scan &&
            steps.gradle-build.conclusion == 'success' &&
            (
              github.event.pull_request.head.repo.full_name == github.repository ||
              github.event_name == 'push' ||
              github.event_name == 'workflow_dispatch'
            ) &&
            !cancelled()
          }}
        run: snyk test --all-sub-projects --severity-threshold=high --json-file-output=snyk-test.json

      - name: Snyk Code
        id: snyk-code
        env:
          SNYK_TOKEN: ${{ secrets.snyk-token }}
        if: >-
          ${{
            inputs.enable-snyk-scan &&
            steps.gradle-build.conclusion == 'success' &&
            (
              github.event.pull_request.head.repo.full_name == github.repository ||
              github.event_name == 'push' ||
              github.event_name == 'workflow_dispatch'
            ) &&
            !cancelled()
          }}
        run: snyk code test --severity-threshold=high --json-file-output=snyk-code.json

      - name: Publish Snyk Results
        if: >-
          ${{
            inputs.enable-snyk-scan &&
            steps.gradle-build.conclusion == 'success' &&
            (
              github.event.pull_request.head.repo.full_name == github.repository ||
              github.event_name == 'push' ||
              github.event_name == 'workflow_dispatch'
            ) &&
            !cancelled()
          }}
        run: |
          if [[ -f "snyk-test.json" ]]; then
            snyk-to-html -i snyk-test.json -o snyk-test.html --summary
            html-to-markdown snyk-test.html -o snyk
            cat snyk/snyk-test.html.md >> $GITHUB_STEP_SUMMARY
          fi

          if [[ -f "snyk-code.json" ]]; then
            snyk-to-html -i snyk-code.json -o snyk-code.html --summary
            html-to-markdown snyk-code.html -o snyk
            cat snyk/snyk-code.html.md >> $GITHUB_STEP_SUMMARY
          fi
