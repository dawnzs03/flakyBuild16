load("//common:defs.bzl", "copy_file")
load("@d2l_rules_csharp//csharp:defs.bzl", "csharp_library")
load(
    "//dotnet:defs.bzl",
    "devtools_version_targets",
    "generated_assembly_info",
    "nuget_package",
    "nuget_push",
)
load(
    "//dotnet:selenium-dotnet-version.bzl",
    "ASSEMBLY_COMPANY",
    "ASSEMBLY_COPYRIGHT",
    "ASSEMBLY_INFORMATIONAL_VERSION",
    "ASSEMBLY_PRODUCT",
    "ASSEMBLY_VERSION",
    "SE_VERSION",
)

generated_assembly_info(
    name = "assembly-info",
    company = ASSEMBLY_COMPANY,
    copyright = ASSEMBLY_COPYRIGHT,
    description = "Selenium WebDriver API .NET Bindings",
    informational_version = ASSEMBLY_INFORMATIONAL_VERSION,
    product = ASSEMBLY_PRODUCT,
    title = "Selenium WebDriver",
    version = ASSEMBLY_VERSION,
)

csharp_library(
    name = "webdriver",
    srcs = glob([
        "*.cs",
        "Chrome/*.cs",
        "Chromium/*.cs",
        "DevTools/**/*.cs",
        "Edge/*.cs",
        "Firefox/**/*.cs",
        "IE/*.cs",
        "Interactions/*.cs",
        "Internal/*.cs",
        "Remote/**/*.cs",
        "Safari/*.cs",
        "Support/*.cs",
        "VirtualAuth/*.cs",
    ]) + [
        ":assembly-info",
    ] + devtools_version_targets(),
    out = "WebDriver",
    resources = [
        "//javascript/atoms/fragments:find-elements.js",
        "//javascript/atoms/fragments:is-displayed.js",
        "//javascript/cdp-support:mutation-listener.js",
        "//javascript/webdriver/atoms:get-attribute.js",
        "//third_party/js/selenium:webdriver_json",
    ],
    target_frameworks = [
        "netstandard2.0",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "@identitymodel.abstractions//:Microsoft.IdentityModel.Abstractions",
        "@identitymodel.logging//:Microsoft.IdentityModel.Logging",
        "@identitymodel.tokens//:Microsoft.IdentityModel.Tokens",
        "@json.net//:Newtonsoft.Json",
        "@system.drawing.common//:System.Drawing.Common",
    ],
)

csharp_library(
    name = "webdriver-strongnamed",
    srcs = glob([
        "*.cs",
        "Chrome/*.cs",
        "Chromium/*.cs",
        "DevTools/**/*.cs",
        "Edge/*.cs",
        "Firefox/**/*.cs",
        "IE/*.cs",
        "Interactions/*.cs",
        "Internal/*.cs",
        "Remote/**/*.cs",
        "Safari/*.cs",
        "Support/*.cs",
        "VirtualAuth/*.cs",
    ]) + [
        ":assembly-info",
    ] + devtools_version_targets(),
    out = "strongnamed/WebDriver",
    keyfile = "//dotnet:WebDriver.snk",
    resources = [
        "//javascript/atoms/fragments:find-elements.js",
        "//javascript/atoms/fragments:is-displayed.js",
        "//javascript/cdp-support:mutation-listener.js",
        "//javascript/webdriver/atoms:get-attribute.js",
        "//third_party/js/selenium:webdriver_json",
    ],
    target_frameworks = [
        "netstandard2.0",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "@identitymodel.abstractions//:Microsoft.IdentityModel.Abstractions",
        "@identitymodel.logging//:Microsoft.IdentityModel.Logging",
        "@identitymodel.tokens//:Microsoft.IdentityModel.Tokens",
        "@json.net//:Newtonsoft.Json",
        "@system.drawing.common//:System.Drawing.Common",
    ],
)

copy_file(
    name = "logo",
    src = "//common/images:selenium_logo_small.png",
    out = "icon.png",
)

copy_file(
    name = "props",
    src = "build/Selenium.WebDriver.targets",
    out = "Selenium.WebDriver.targets",
)

copy_file(
    name = "manager-linux",
    src = "//common/manager:selenium-manager-linux",
    out = "manager/linux/selenium-manager",
)

copy_file(
    name = "manager-macos",
    src = "//common/manager:selenium-manager-macos",
    out = "manager/macos/selenium-manager",
)

copy_file(
    name = "manager-windows",
    src = "//common/manager:selenium-manager-windows",
    out = "manager/windows/selenium-manager.exe",
)

nuget_package(
    name = "package",
    src = "WebDriver.nuspec",
    create_symbol_package = True,
    is_windows = select({
        "@bazel_tools//src/conditions:host_windows": True,
        "//conditions:default": False,
    }),
    package_id = "Selenium.WebDriver",
    package_version = "{}".format(SE_VERSION),
    visibility = ["//visibility:public"],
    deps = [
        ":logo",
        ":manager-linux",
        ":manager-macos",
        ":manager-windows",
        ":props",
        ":webdriver",
    ],
)

nuget_package(
    name = "package-strongnamed",
    src = "WebDriver.StrongNamed.nuspec",
    is_windows = select({
        "@bazel_tools//src/conditions:host_windows": True,
        "//conditions:default": False,
    }),
    package_id = "Selenium.WebDriver.StrongNamed",
    package_version = "{}".format(SE_VERSION),
    visibility = ["//visibility:public"],
    deps = [
        ":webdriver-strongnamed",
    ],
)

nuget_push(
    name = "publish",
    src = ":package",
    api_key = "//dotnet:nuget-api-key",
)
